name: Build-test-upload-binaries

on: [push, pull_request]

jobs:


  linux-x86-gcc:
    runs-on: "ubuntu-20.04"

    steps:
      - uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H%M')"

      - name: Create build environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS="yes" -DCMAKE_CXX_FLAGS="-Wall"

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config Release --target all
        env:
          MAKEFLAGS: "-j2"

      - name: Binary info
        run: file ${{runner.workspace}}/build/cpp_command_output

      - name: Run
        run: ${{runner.workspace}}/build/cpp_command_output

      - name: Upload cpp_command_output binary
        uses: actions/upload-artifact@v1
        with:
          name: cpp_command_output-linux-x86-gcc-${{ env.BUILD_DATE }}
          path: ${{runner.workspace}}/build/cpp_command_output
        env:
          BUILD_DATE: ${{ steps.date.outputs.date }}

  windows-x86-msvc:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H%M')"

      - name: Create build environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config Release
        env:
          MAKEFLAGS: "-j2"

      - name: Test run
        working-directory: ${{runner.workspace}}/build
        run: ${{runner.workspace}}\build\Release\cpp_command_output.exe

      #- name: Upload cpp_command_output Binary
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: cpp_command_output-windows-x86-msvc-${{ env.BUILD_DATE }}.exe
      #    path: ${{runner.workspace}}\build\Release\cpp_command_output.exe
      #  env:
      #    BUILD_DATE: ${{ steps.date.outputs.date }}

          
      - name: Pack
        run: dotnet pack --configuration Release /p:Version=${{ env.BUILD_DATE }} --no-build --output .
      #- name: Authenticate to GitHub packages
      #  run: dotnet nuget add source --username ${USERNAME} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Zina-420001498/index.json"
      #- name: Push
      #  run: dotnet nuget push PrimeService.${VERSION}.nupkg --api-key ${PAT} --source "github" 
        

